lane :hoverview_release do
    hoverview_main
    if git_branch() == "master"
        hoverview_deploy
        xcodeprojver = increment_version_number
        version_bump_podspec(
            path: "HoverViewFramework.podspec",
            version_number: xcodeprojver
        )
        git_commit(
            path: [
                "HoverView.xcodeproj/project.pbxproj",
                "HoverView/Info.plist",
                "HoverViewTests/Info.plist",
                "HoverViewFramework.podspec"
            ], 
            message: "Changed framework version number to " + xcodeprojver
        )
        # push_to_git_remote
        slack(
            slack_url: ENV["SLACK_URL"],
            message: "HoverView framework release version : #{xcodeprojver}, has been successfully deployed!",
            channel: "#iosfastlane",
            success: true,        # Optional, defaults to true.
            payload: {
                "Build Date" => Time.new.to_s,
                "Built by" => "Travis",
            }
        )
    end
end

lane :hoverview_main do
    increment_build_number
    hoverview_test
    if git_branch() == "develop"
        print "DEVELOP BRANCH\n"
        slack(
            slack_url: ENV["SLACK_URL"],
            message: "HoverView framework has been successfully built on develop branch!",
            channel: "#iosfastlane",  # Optional, by default will post to the default channel configured for the POST URL.
            success: true,        # Optional, defaults to true.
            payload: {  # Optional, lets you specify any number of your own Slack attachments.
                "Build Date" => Time.new.to_s,
                "Built by" => "Travis",
            }
        )
    elsif git_branch() == "master"
        slack(
            slack_url: ENV["SLACK_URL"],
            message: "HoverView framework has been successfully built on develop branch!",
            channel: "#iosfastlane",
            success: true,        # Optional, defaults to true.
            payload: {
                "Build Date" => Time.new.to_s,
                "Built by" => "Travis",
            }
        )
    end
end

lane :hoverview_test do 
    scan(
        code_coverage: true,
        open_report: true
    )
    xcov(
        coveralls_repo_token: ENV["COVERALLS_REPO_TOKEN"]
    )
    pod_lib_lint
end

lane :hoverview_deploy do
    pod_push
    print "[!!] deployed\n"
end

error do |lane, exception|
    print "ERROR --> "
    slack(
        slack_url: ENV["SLACK_URL"],
        message: "Lane failed, Details --> " + exception.message,
        channel: "#iosfastlane",  # Optional, by default will post to the default channel configured for the POST URL.
        success: false,        # Optional, defaults to true.
        payload: {  # Optional, lets you specify any number of your own Slack attachments.
            "Build Date" => Time.new.to_s,
            "Built by" => "Travis",
        }
    )
end